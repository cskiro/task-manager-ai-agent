[tool.poetry]
name = "task-manager-ai-agent"
version = "0.2.0-alpha"
description = "An intelligent AI agent that helps break down complex projects into manageable tasks"
authors = ["Connor"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/YOUR_USERNAME/task-manager-ai-agent"
keywords = ["ai", "agent", "task-management", "project-planning", "llm"]
package-mode = false
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
pydantic = "^2.11.7"
python-dotenv = "^1.1.1"
openai = "^1.93.0"
anthropic = "^0.56.0"
rich = "^13.5.2"  # For beautiful CLI output
typer = "^0.12.3"  # For CLI commands

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^1.0.0"
pytest-cov = "^6.2.1"
mypy = "^1.16.1"
ruff = "^0.12.1"
black = "^25.1.0"
pre-commit = "^3.5.0"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --ignore=docs"
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W293",  # blank line contains whitespace (black handles this)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["F841", "B007", "UP038"]  # Ignore unused vars, loop vars, and union types in tests

[tool.ruff.lint.isort]
known-third-party = ["pydantic", "pytest", "typer"]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"